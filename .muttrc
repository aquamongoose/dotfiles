#-----------#
# Passwords #
#-----------#
# remember our passwords file .gmpass?  Well these lines find it and decrypt it using gpg. Important note the my_ part of each of these is 
# critical so don't leave it out, it must be "set my_etcetera .......
set my_tmpsecret=`gpg -o ~/.encrypt/.tmp -d ~/.encrypt/.gmpass.gpg`
set my_gpass1=`awk '/aquamongoose@gmail.com/ {print $2}' ~/.encrypt/.tmp`
set my_gpass2=`awk '/bill.cooperman@gmail.com/ {print $2}' ~/.encrypt/.tmp`
set my_gpass3=`awk '/bill@expii.com/ {print $2}' ~/.encrypt/.tmp`
set my_gpass4=`awk '/wcooperm@andrew.cmu.edu/ {print $2}' ~/.encrypt/.tmp`
set my_del=`rm -f ~/.encrypt/.tmp`
 
#---------------#
# Account Hooks #
#---------------#
# What you are replacing in here is "user#acct that is it the rest stays the same for each of the three accounts
# all we are doing here is creating hooks to get the mail and stay in contact with gmail.  Ummm, don't try this with yahoo :)
account-hook . "unset imap_user; unset imap_pass; unset tunnel" # unset first!
account-hook        "imaps://aquamongoose@imap.gmail.com/" "\
    set imap_user   = aquamongoose@gmail.com \
        imap_pass   = $my_gpass1"
account-hook        "imaps://bill.cooperman@imap.gmail.com/" "\
    set imap_user   = bill.cooperman@gmail.com \
        imap_pass   = $my_gpass2"
account-hook        "imaps://bill@expii.com@imap.gmail.com/" "\
    set imap_user   = bill@expii.com@gmail.com \
        imap_pass   = $my_gpass3"
account-hook        "imaps://wcooperm@andrew.cmu.edu@imap.gmail.com/" "\
    set imap_user   = wcooperm@andrew.cmu.edu@gmail.com \
        imap_pass   = $my_gpass4"
 
#-------------------------------------#
# Folders, mailboxes and folder hooks #
#-------------------------------------#
# In this section you are changing the user#acct and Your Name and that is it. You could monkey with the folder locations as you wish

# Setup for user1:
set folder          = imaps://aquamongoose@imap.gmail.com/
mailboxes           = +INBOX =[Gmail]/Drafts =[Gmail]/'Sent Mail' =[Gmail]/Spam =[Gmail]/Trash
set spoolfile       = +INBOX
folder-hook         imaps://aquamongoose@imap.gmail.com/ "\
    set folder      = imaps://aquamongoose@imap.gmail.com/ \
        spoolfile   = +INBOX \
        postponed   = +[Gmail]/Drafts \
        record      = +[Gmail]/'Sent Mail' \
        from        = 'Bill Cooperman <aquamongoose@gmail.com> ' \
        realname    = 'Bill Cooperman' \
        smtp_url    = smtps://aquamongoose@smtp.gmail.com \
        smtp_pass   = $my_gpass1"
 
# Setup for user2:
set folder          = imaps://bill.cooperman@imap.gmail.com/
mailboxes           = +INBOX =[Gmail]/Drafts =[Gmail]/'Sent Mail' =[Gmail]/Spam =[Gmail]/Trash
set spoolfile       = +INBOX
folder-hook         imaps://bill.cooperman@imap.gmail.com/ "\
    set folder      = imaps://bill.cooperman@imap.gmail.com/ \
        spoolfile   = +INBOX \
        postponed   = +[Gmail]/Drafts \
        record      = +[Gmail]/'Sent Mail' \
        from        = 'Bill Cooperman <bill.cooperman@gmail.com> ' \
        realname    = 'Bill Cooperman' \
        smtp_url    = smtps://bill.cooperman@smtp.gmail.com \
        smtp_pass   = $my_gpass2"
        
# Setup for user3:
set folder          = imaps://bill@expii.com@imap.gmail.com/
mailboxes           = +INBOX =[Gmail]/Drafts =[Gmail]/'Sent Mail' =[Gmail]/Spam =[Gmail]/Trash
set spoolfile       = +INBOX
folder-hook         imaps://bill@expii.com@imap.gmail.com/ "\
    set folder      = imaps://bill@expii.com@imap.gmail.com/ \
        spoolfile   = +INBOX \
        postponed   = +[Gmail]/Drafts \
        record      = +[Gmail]/'Sent Mail' \
        from        = 'Bill Cooperman <bill@expii.com@gmail.com> ' \
        realname    = 'Bill Cooperman' \
        smtp_url    = smtps://bill@expii.com@smtp.gmail.com \
        smtp_pass   = $my_gpass3"

# Setup for user4:
set folder          = imaps://wcooperm@andrew.cmu.edu@imap.gmail.com/
mailboxes           = +INBOX =[Gmail]/Drafts =[Gmail]/'Sent Mail' =[Gmail]/Spam =[Gmail]/Trash
set spoolfile       = +INBOX
folder-hook         imaps://wcooperm@andrew.cmu.edu@imap.gmail.com/ "\
    set folder      = imaps://wcooperm@andrew.cmu.edu@imap.gmail.com/ \
        spoolfile   = +INBOX \
        postponed   = +[Gmail]/Drafts \
        record      = +[Gmail]/'Sent Mail' \
        from        = 'Bill Cooperman <wcooperm@andrew.cmu.edu@gmail.com> ' \
        realname    = 'Bill Cooperman' \
        smtp_url    = smtps://wcooperm@andrew.cmu.edu@smtp.gmail.com \
        smtp_pass   = $my_gpass4"
 
#--------#
# Macros #
#--------#
macro index <F1> "y6<return><return>"  # jump to mailbox number 6 (user2 inbox)
macro index <F2> "y12<return><return>" # jump to mailbox number 12 (user1 inbox)
macro index <F3> "y18<return><return>"  # jump to mailbox number 18 (user3 inbox)
macro index <F4> "y24<return><return>"  # jump to mailbox number 24 (user4 inbox)
# Below requires added script separate from mutt for more info see the section on opening HTML files in a browser
macro index <F10> "<copy-message>/tmp/mutttmpbox\n<enter><shell-escape>~/bin/viewhtmlmail.py\n" "View HTML in browser"
macro pager <F10> "<copy-message>/tmp/mutttmpbox\n<enter><shell-escape>~/bin/viewhtmlmail.py\n" "View HTML in browser"
#-----------------------#
# Gmail-specific macros #
#-----------------------#
# to delete more than 1 message, just mark them with "t" key and then do "d" on them
macro index d ";s+[Gmail]/Trash<enter><enter>" "Move to Gmail's Trash"
# delete message, but from pager (opened email)
macro pager d "s+[Gmail]/Trash<enter><enter>"  "Move to Gmail's Trash"
# undelete messages
macro index u ";s+INBOX<enter><enter>"         "Move to Gmail's INBOX"
macro pager u "s+INBOX<enter><enter>"          "Move to Gmail's INBOX"
 
#-------------------------#
# Misc. optional settings #
#-------------------------#
# Check for mail every minute for current IMAP mailbox every 1 min
set timeout         = 60
# Check for new mail in ALL mailboxes every 2 min
set mail_check      = 120
# keep imap connection alive by polling intermittently (time in seconds)
set imap_keepalive  = 300
# allow mutt to open new imap connection automatically
unset imap_passive
# store message headers locally to speed things up
# (the ~/.mutt folder MUST exist! Arch does not create it by default)
set header_cache    = ~/.mutt/hcache
# sort mail by threads
set sort            = threads
# and sort threads by date
set sort_aux        = last-date-received

color normal white default
color hdrdefault brightcyan default
color signature green default
color attachment brightyellow default
color quoted green default
color quoted1 white default
color tilde blue default
